"""
Script para verificar a integra√ß√£o do Flask com IIS
"""
import os
import sys
import subprocess
import ctypes

def is_admin():
    """Verificar se o script est√° sendo executado como administrador (apenas Windows)"""
    try:
        return os.name == 'nt' and ctypes.windll.shell32.IsUserAnAdmin() != 0
    except:
        return False

def check_python():
    """Verificar instala√ß√£o do Python"""
    print("\nüîç Verificando instala√ß√£o do Python...")
    try:
        python_version = subprocess.check_output([sys.executable, '-V'], 
                                              stderr=subprocess.STDOUT, 
                                              universal_newlines=True).strip()
        print(f"‚úÖ {python_version} encontrado")
        return True
    except:
        print("‚ùå Python n√£o encontrado no PATH")
        return False

def check_wfastcgi():
    """Verificar instala√ß√£o do wfastcgi"""
    print("\nüîç Verificando instala√ß√£o do wfastcgi...")
    try:
        # Verifica se o m√≥dulo est√° instalado
        import importlib
        wfastcgi_spec = importlib.util.find_spec("wfastcgi")
        if wfastcgi_spec is None:
            print("‚ùå M√≥dulo wfastcgi n√£o est√° instalado")
            print("   Execute: pip install wfastcgi")
            return False
        
        # Encontrar o caminho do arquivo wfastcgi.py
        wfastcgi_path = os.path.join(os.path.dirname(wfastcgi_spec.origin), "wfastcgi.py")
        if os.path.exists(wfastcgi_path):
            print(f"‚úÖ wfastcgi encontrado em: {wfastcgi_path}")
            return True
        else:
            print("‚ùå Arquivo wfastcgi.py n√£o encontrado")
            return False
    except Exception as e:
        print(f"‚ùå Erro ao verificar wfastcgi: {e}")
        return False

def check_iis():
    """Verificar instala√ß√£o do IIS (somente Windows)"""
    if os.name != 'nt':
        print("\n‚ö†Ô∏è Verifica√ß√£o do IIS dispon√≠vel apenas no Windows")
        return False
    
    print("\nüîç Verificando instala√ß√£o do IIS...")
    try:
        # Verificar se o servi√ßo do IIS est√° em execu√ß√£o
        output = subprocess.check_output(["sc", "query", "W3SVC"], 
                                       stderr=subprocess.STDOUT, 
                                       universal_newlines=True)
        
        if "RUNNING" in output:
            print("‚úÖ Servi√ßo IIS (World Wide Web Publishing) est√° em execu√ß√£o")
            return True
        else:
            print("‚ùå Servi√ßo IIS n√£o est√° em execu√ß√£o")
            print("   Execute: net start W3SVC")
            return False
    except:
        print("‚ùå IIS n√£o parece estar instalado")
        print("   Execute: dism /online /enable-feature /featurename:IIS-WebServerRole")
        return False

def check_fastcgi_config():
    """Verificar configura√ß√£o do FastCGI no IIS"""
    if os.name != 'nt':
        print("\n‚ö†Ô∏è Verifica√ß√£o do FastCGI dispon√≠vel apenas no Windows")
        return False
    
    if not is_admin():
        print("\n‚ö†Ô∏è Esta verifica√ß√£o requer privil√©gios de administrador")
        print("   Execute este script como administrador para verificar a configura√ß√£o do FastCGI")
        return False
    
    print("\nüîç Verificando configura√ß√£o do FastCGI no IIS...")
    try:
        # Tenta executar o comando appcmd para listar as configura√ß√µes de FastCGI
        appcmd_path = r"%systemroot%\system32\inetsrv\appcmd.exe"
        output = subprocess.check_output(f"{appcmd_path} list config -section:system.webServer/fastCgi", 
                                       stderr=subprocess.STDOUT, 
                                       shell=True,
                                       universal_newlines=True)
        
        if "python" in output.lower():
            print("‚úÖ Configura√ß√£o FastCGI para Python encontrada no IIS")
            print(f"   {output.strip()}")
            return True
        else:
            print("‚ùå Configura√ß√£o FastCGI para Python n√£o encontrada no IIS")
            print("   Execute: wfastcgi-enable")
            return False
    except Exception as e:
        print(f"‚ùå Erro ao verificar configura√ß√£o FastCGI: {e}")
        print("   Execute: wfastcgi-enable")
        return False

def check_web_config():
    """Verificar se o web.config existe e tem conte√∫do v√°lido"""
    print("\nüîç Verificando arquivo web.config...")
    if not os.path.exists('web.config'):
        print("‚ùå Arquivo web.config n√£o encontrado")
        return False
    
    try:
        with open('web.config', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Verifica√ß√µes b√°sicas do conte√∫do
        checks = {
            'FastCgiModule': 'FastCgiModule' in content,
            'scriptProcessor': 'scriptProcessor' in content,
            'WSGI_HANDLER': 'WSGI_HANDLER' in content,
            'environmentVariables': 'environmentVariables' in content,
            'rewrite rules': '<rewrite>' in content
        }
        
        all_checks_passed = all(checks.values())
        
        if all_checks_passed:
            print("‚úÖ Arquivo web.config parece estar configurado corretamente")
        else:
            print("‚ö†Ô∏è Arquivo web.config pode precisar de ajustes:")
            for check, result in checks.items():
                print(f"   {'‚úÖ' if result else '‚ùå'} {check}")
        
        return all_checks_passed
    except Exception as e:
        print(f"‚ùå Erro ao verificar web.config: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("\n===== VERIFICA√á√ÉO DE CONFIGURA√á√ÉO FLASK + IIS =====")
    
    # Verificar componentes
    python_ok = check_python()
    wfastcgi_ok = check_wfastcgi()
    iis_ok = check_iis()
    fastcgi_ok = check_fastcgi_config()
    web_config_ok = check_web_config()
    
    # Resumo
    print("\n===== RESUMO DA VERIFICA√á√ÉO =====")
    print(f"Python: {'‚úÖ' if python_ok else '‚ùå'}")
    print(f"wfastcgi: {'‚úÖ' if wfastcgi_ok else '‚ùå'}")
    print(f"IIS: {'‚úÖ' if iis_ok else '‚ùå'}")
    print(f"Configura√ß√£o FastCGI: {'‚úÖ' if fastcgi_ok else '‚ùå'}")
    print(f"web.config: {'‚úÖ' if web_config_ok else '‚ùå'}")
    
    # Verificar se todos os componentes est√£o OK
    all_ok = python_ok and wfastcgi_ok and iis_ok and fastcgi_ok and web_config_ok
    
    if all_ok:
        print("\n‚úÖ Todos os componentes necess√°rios est√£o configurados corretamente!")
        print("   A aplica√ß√£o Flask deve funcionar no IIS.")
    else:
        print("\n‚ö†Ô∏è Alguns componentes precisam ser configurados. Siga as instru√ß√µes acima.")
    
    print("\nPara instru√ß√µes detalhadas, consulte o arquivo README-FLASK.md")

if __name__ == "__main__":
    main()
